<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sw.newProject.mapper.BoardMapper">

    <select id="getBoardList" parameterType="com.sw.newProject.dto.board.BoardListDto" resultType="com.sw.newProject.dto.board.BoardDto">
        SELECT * FROM
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardDto.boardId == 'travel'">travel</when>
        </choose>
        WHERE deleteYn = FALSE AND hiddenFl = FALSE
        LIMIT #{pageDto.start}, #{pageDto.pageLength}
    </select>

    <select id="getBoardCount" parameterType="String" resultType="int">
        SELECT count(*) FROM
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardId == 'travel'">travel</when>
        </choose>
        WHERE deleteYn = FALSE AND hiddenFl = FALSE
    </select>

    <select id="getBoardSearchCount" parameterType="com.sw.newProject.dto.board.BoardSearchDto" resultType="int">
        SELECT count(*) FROM
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardDto.boardId == 'travel'">travel</when>
        </choose>
        WHERE deleteYn = FALSE AND hiddenFl = FALSE AND
        <choose>
            <!-- subject 검색 -->
            <when test="type == 'subject'">
                subject LIKE CONCAT('%', #{keyword}, '%')
            </when>

            <!-- contents 검색 -->
            <when test="type == 'contents'">
                contents LIKE CONCAT('%', #{keyword}, '%')
            </when>

            <!-- all 검색: 제목, 내용, 작성자, 해시태그 등 모든 컬럼에서 검색 -->
            <when test="type == 'all'">
                (subject LIKE CONCAT('%', #{keyword}, '%') OR
                contents LIKE CONCAT('%', #{keyword}, '%') OR
                writerNm LIKE CONCAT('%', #{keyword}, '%') OR
                district LIKE CONCAT('%', #{keyword}, '%') OR
                hashTag LIKE CONCAT('%', #{keyword}, '%'))
            </when>

            <!-- writerNm 검색 -->
            <when test="type == 'writerNm'">
                writerNm LIKE CONCAT('%', #{keyword}, '%')
            </when>

            <!-- district 검색 -->
            <when test="type == 'district'">
                district LIKE CONCAT('%', #{keyword}, '%')
            </when>

            <!-- hashTag 검색 -->
            <when test="type == 'hashTag'">
                hashTag LIKE CONCAT('%', #{keyword}, '%')
            </when>
        </choose>
    </select>

    <insert id="doWrite" parameterType="com.sw.newProject.dto.board.BoardDto">
        INSERT INTO
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardId == 'travel'">travel</when>
        </choose>
            (memNo, writerNm, subject, contents, regDt) VALUES(#{memNo}, #{writerNm}, #{subject}, #{contents}, now())
    </insert>

    <select id="getBoardView" parameterType="com.sw.newProject.dto.board.BoardDto">
        SELECT * FROM
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardId == 'travel'">travel</when>
        </choose>
        WHERE boardNo = #{boardNo}
    </select>

    <update id="doUpdate" parameterType="com.sw.newProject.dto.board.BoardDto">
        UPDATE
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardId == 'travel'">travel</when>
        </choose>
        SET subject = #{subject}, contents = #{contents}
        WHERE boardNo = #{boardNo}
    </update>

    <update id="doDelete" parameterType="com.sw.newProject.dto.board.BoardDto">
        UPDATE
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardId == 'travel'">travel</when>
        </choose>
        SET deleteYn = TRUE
        WHERE boardNo = #{boardNo}
    </update>

    <select id="doSearch" parameterType="com.sw.newProject.dto.board.BoardSearchDto" resultType="com.sw.newProject.dto.board.BoardDto">
        SELECT * FROM
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardDto.boardId == 'travel'">travel</when>
        </choose>
        WHERE deleteYn = FALSE AND
        <choose>
            <!-- subject 검색 -->
            <when test="type == 'subject'">
                subject LIKE CONCAT('%', #{keyword}, '%')
            </when>

            <!-- contents 검색 -->
            <when test="type == 'contents'">
                contents LIKE CONCAT('%', #{keyword}, '%')
            </when>

            <!-- all 검색: 제목, 내용, 작성자, 해시태그 등 모든 컬럼에서 검색 -->
            <when test="type == 'all'">
                (subject LIKE CONCAT('%', #{keyword}, '%') OR
                contents LIKE CONCAT('%', #{keyword}, '%') OR
                writerNm LIKE CONCAT('%', #{keyword}, '%') OR
                district LIKE CONCAT('%', #{keyword}, '%') OR
                hashTag LIKE CONCAT('%', #{keyword}, '%'))
            </when>

            <!-- writerNm 검색 -->
            <when test="type == 'writerNm'">
                writerNm LIKE CONCAT('%', #{keyword}, '%')
            </when>

            <!-- district 검색 -->
            <when test="type == 'district'">
                district LIKE CONCAT('%', #{keyword}, '%')
            </when>

            <!-- hashTag 검색 -->
            <when test="type == 'hashTag'">
                hashTag LIKE CONCAT('%', #{keyword}, '%')
            </when>

            <!-- 기본적으로 검색이 없으면 오류를 방지하기 위해 '1=1' 조건을 추가 -->
            <otherwise>
                1=1
            </otherwise>
        </choose>
        ORDER BY boardNo
        LIMIT #{pageDto.start}, #{pageDto.pageLength}
    </select>

    <update id="incrementHitCnt" parameterType="com.sw.newProject.dto.board.BoardDto">
        UPDATE
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardId == 'travel'">travel</when>
        </choose>
        SET hitCnt = hitCnt + 1
        WHERE boardNo = #{boardNo}
    </update>

    <update id="doLike" parameterType="com.sw.newProject.dto.LikeDto">
        UPDATE
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardDto.boardId == 'travel'">travel</when>
        </choose>
        SET likeCnt = likeCnt + 1
        WHERE boardNo = #{boardDto.boardNo}
    </update>

    <select id="getPopularBoard" parameterType="java.lang.String" resultType="com.sw.newProject.dto.board.BoardDto">
        SELECT * FROM
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardId == 'travel'">travel</when>
        </choose>
        WHERE deleteYn = FALSE
        ORDER BY likeCnt DESC
        LIMIT 0, 5
    </select>

    <select id="getWriterMemNo" parameterType="com.sw.newProject.dto.board.BoardDto" resultType="int">
        SELECT memNo FROM
        <choose>
            <!-- 게시판 생성할 때마다 추가해야 CRUD 가능 -->
            <when test="boardId == 'travel'">travel</when>
        </choose>
        WHERE boardNo = #{boardNo}
    </select>

    <select id="viewHitCnt" parameterType="com.sw.newProject.dto.board.BoardDto" resultType="Integer">
        SELECT COUNT(*) FROM
            boardIncrementCnt
        WHERE memNo = #{memNo} AND boardId = #{boardId} AND boardNo = #{boardNo} AND DATE(regDt) = CURDATE()
    </select>

    <insert id="insertHitInfo" parameterType="com.sw.newProject.dto.board.BoardDto">
        INSERT INTO boardIncrementCnt(boardNo, boardId, memNo, regDt, ip)
        VALUES (#{boardNo}, #{boardId}, #{memNo}, now(), #{writerIp})
    </insert>
</mapper>