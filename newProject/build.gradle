plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sw'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.jetbrains:annotations:23.0.0'// 유효성 검증 의존성
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.h2database:h2:2.2.224' // Replace with the latest version
	implementation group: 'org.json', name: 'json', version: '20240303' // JSONObject(org.json)
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-websocket' // 웹소켓 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb' // MongoDB 라이브러리

	// 스웨거 의존성
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test' // 테스트 의존성 (필요 시)
}

tasks.named('test') {
	useJUnitPlatform()
}
